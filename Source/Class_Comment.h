//***********************************************************************************
//!	ファイル名		Class_Comment.h
//
//	機能			コメントオブジェクトに関する定義
//	記述			上岡　純
//	プロジェクト	未定
//	更新			2008/09/09	<新規>
//***********************************************************************************

#pragma once

//-----------------------------------------------------------------------
//!	インターフェイスヘッダー
//-----------------------------------------------------------------------
#include	"Class_Texture.h"				//!< テクスチャベース
#include	"Class_FontBase.h"				//!< フォントベース
#include	"Class_Sound_OggVorbis.h"		//!< oggライブラリ(サウンドを発生させる為)

//-----------------------------------------------------------------------
//!	3Dオブジェクトの名前空間
//-----------------------------------------------------------------------
namespace O3D
{
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	名前空間の解放
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	using	namespace	FB;		//!< フォントベース

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	コメントのパターン
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	enum	COMMENT_PATTERN
	{
		eCPTN_NORMAL,						//!< 通常
		eCPTN_SHOUT,						//!< 叫ぶ
		eCPTN_SKY,							//!< 空声
		eCPTN_SYSTEM,						//!< システム
		eCPTN_NARRATION,					//!< ナレーション
		eCPTN_MAX
	};

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	クラス名		CCOMMENT
	//
	//	機能			コメントオブジェクト
	//	更新			2008/09/09	<新規>
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	class CCOMMENT : public CTEXTURE
	{
			//==================================================================
			//	コメントクラスの専用マクロ
			//==================================================================
				#define	MAX_LINE			3
				#define	COMMENT_NORMAL		"commentNormal"
				#define	COMMENT_SHOUT		"commentShout"
				#define	COMMENT_SKY			"commentSky"
				#define	COMMENT_SYSTEM		"commentSystem"
				#define	COMMENT_NARRATION	"commentNarration"

				#define	TEX_BUTTOM_UP		"buttom_up"
				#define	TEX_BUTTOM_DOWN		"buttom_down"
				#define	TEX_BUTTOM_SIZE		50.0f

				#define	COMMENT_EXPAND		20.0f
				#define	COMMENT_TEXT_SIZEX	15
				#define	COMMENT_TEXT_SIZEY	30
				#define	COMMENT_TEX_BLANKX	200.0f
				#define	COMMENT_TEX_BLANKY	200.0f

				#define	NO_CNT_DOWN			1000		//!< 自動消滅フレームの無効値

			//==================================================================
			//	コメント動作パターン
			//==================================================================
				enum	COMMENT_MOVEPTN
				{
					eCMPN_APPEAR,			//!< 出現
					eCMPN_WAIT,				//!< 待機
					eCMPN_DISAPPEAR,		//!< 消滅
					eCMPN_FALSE,			//!< 存在しない
				};

	private:		//-------------------- private --------------------//

			//==================================================================
			//	コメントパターンに合った、テクスチャ名の検索
			//==================================================================
				LPSTR				getCommentTextureName(COMMENT_PATTERN inPtn);

				CFONT_BASE*			font;						//!< フォントベース
				COMMENT_PATTERN		commentPtn;					//!< コメントパターン
				COMMENT_MOVEPTN		movePtn;					//!< 動作パターン
				FONT_STRING*		string[MAX_LINE];			//!< コメント行
				FONT_STRING			stringShadow[MAX_LINE];		//!< 影付け用コメント
				VEC2				targetSize;					//!< 目標サイズ

				CTEXTURE*			buttomUp;					//!< ボタンが押されていないテクスチャ
				CTEXTURE*			buttomDown;					//!< ボタンが押されているテクスチャ
				int					iButtomCnt;					//!< ボタンカウンタ
				int					iCntDown;					//!< カウントダウン(自動消滅フレーム)

			//==================================================================
			//	サウンドデータ
			//==================================================================
				SSTATIC*	sStaticDecision;					//!< 決定音
				SSTATIC*	sStaticVoice;						//!< 音声

			//==================================================================
			//	サウンド操作
			//==================================================================
				void	soundDecision(void){
					if(sStaticDecision)	this->sStaticDecision->play(0, NULL);
				}
				void	soundVoice(void){
					if(sStaticVoice)	this->sStaticVoice->play(0, NULL);
				}

			//==================================================================
			//	コメント動作分岐の処理
			//==================================================================
				void	motionAppear(void);						//!< 出現処理
				void	motionWait(BOOL inBoolen);				//!< 待機処理
				void	motionDisappear(void);					//!< 消滅処理

			//==================================================================
			//	コメント動作分岐の描画
			//==================================================================
				void	drawAppear(CONST SPRITE inSprite);		//!< 出現描画
				void	drawWait(CONST SPRITE inSprite);		//!< 待機描画
				void	drawDisappear(CONST SPRITE inSprite);	//!< 消滅描画

	public:			//-------------------- public --------------------//

				CCOMMENT(CONST DEV inDev, int inPtn, BOOL inReversal,
						 VEC2* inLoc, int inCntDown = NO_CNT_DOWN, CONST LPSTR inVoice = "");
		virtual	~CCOMMENT(void);

			//==================================================================
			//	コメント行の挿入
			//==================================================================
				void	setString(	LPSTR		inString,
									int			inLine,
									D3DCOLOR	inColor = D3DCOLOR_RGBA(0,0,0,255));

			//==================================================================
			//	コメント動作
			//==================================================================
				BOOL	motion(BOOL inBoolen);

			//==================================================================
			//	コメント描画
			//==================================================================
		virtual	BOOL	draw(CONST SPRITE inSprite);
	};

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	クラス名		CCOMMENT_GROUP
	//
	//	機能			コメントオブジェクトグループ
	//	更新			2008/11/11	<新規>
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	class CCOMMENT_GROUP
	{
	private:		//-------------------- private --------------------//

				vector<CCOMMENT*>	vComment;		//!< コメント登録先

	public:			//-------------------- public --------------------//

			//==================================================================
			//	デストラクタ
			//==================================================================
				~CCOMMENT_GROUP(void)	{ this->releaseComment();			}

			//==================================================================
			//	コメント登録
			//==================================================================
				void	setComment(CCOMMENT* inComment)
				{	this->vComment.push_back(inComment);					}

			//==================================================================
			//	全コメント実行
			//==================================================================
				BOOL	executeComment(BOOL inBoolen);

			//==================================================================
			//	全コメント描画
			//==================================================================
				void	drawComment(CONST SPRITE inSprite)
				{	VEC_LOOP(CCOMMENT*, vComment)	 (*p)->draw(inSprite);	}

			//==================================================================
			//	全コメント解放
			//==================================================================
				void	releaseComment(void)
				{	SAFE_VECTOR_DELETE(vComment, CCOMMENT*);				} 
	};
}
//-----------------------------------------------------------------------
//!	3Dオブジェクトの名前空間
//-----------------------------------------------------------------------