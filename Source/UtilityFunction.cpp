//***********************************************************************************
//!	ファイル名		UtilityFunction.cpp
//
//	機能			主に汎用的な関数の実装
//	記述			上岡　純
//	プロジェクト	未定
//	更新			2008/04/17	<新規>
//***********************************************************************************

//-----------------------------------------------------------------------
//!	インターフェイスヘッダー
//-----------------------------------------------------------------------
#include	"Precompiler.h"

//#include	"UtilityFunction.h"

//-----------------------------------------------------------------------
//!	ユーティリティの名前空間
//-----------------------------------------------------------------------
namespace UT
{
	//================================================================================
	//!	関数名		uf_FOpen
	//
	//	機能		fopen()を.Netのバージョンに対応させる
	//	引数		*szType		開く型
	//				*szFileName	ファイル名
	//	戻り値		正負を返す
	//	更新		2008/05/08	<新規>
	//================================================================================
	FILE* uf_FOpen(const char* szFileName, const char* szType)
	{
	//!	.Net2005Ver.の場合
	#ifdef VS2005
		FILE*	fp	= NULL;
		fopen_s(&fp, szFileName, szType);
		return	fp;
	//!	その他のVer.の場合
	#else
		return fopen(szFileName, szType);
	#endif
	}

	//================================================================================
	//!	関数名		uf_StrCpy1
	//
	//	機能		文字列をコピーする
	//	機能概要	文字列をコピーする際、2バイトの"\n""\0"を1バイトにする
	//	引数		inDest			コピー先
	//				inSizeDest		コピー先バッファ数
	//				inSource		コピー元
	//				inSizeSource	コピー元バッファ数
	//	更新		2009/01/27	<新規>
	//================================================================================
	void uf_StrCpy1(LPSTR inDest, int inSizeDest, LPSTR inSource, int inSizeSource)
	{
		ZeroMemory(inDest, inSizeDest);
		int	iD, iS;
		for(iD = 0, iS = 0;
			iD < inSizeDest || iS < inSizeSource;
			iD++, iS++)
		{
			if(	(inSource[iS])	== '\\')
			{
				if		((inSource[iS+ 1]) == 'n')
				{
					(inDest[iD]) = '\n';
					iS++;
				}
				else if	((inSource[iS+ 1]) == '0')
				{
					(inDest[iD]) = '\0';
					iS++;
				}
				else
				{
					(inDest[iD]) = (inSource[iS]);
				}
			}
			else
			{
				(inDest[iD]) = (inSource[iS]);
				if((inDest[iD]) == '\0')
				{
					break;
				}
			}
		}
	}
}
//-----------------------------------------------------------------------
//!	ユーティリティの名前空間
//-----------------------------------------------------------------------