//***********************************************************************************
//!	ファイル名		Class_BossClime.h
//
//	機能			ボスキャラクタークラス「クライム」の定義
//	記述			上岡　純
//	プロジェクト	[KageTokiGIRL]
//	更新			2009/02/16	<新規>
//***********************************************************************************

#pragma	once

//-----------------------------------------------------------------------
//!	インターフェイスヘッダー
//-----------------------------------------------------------------------
#include	"Class_KageTokiAdventBoss.h"	//!< アドベンチャーゲームボスベース
#include	"Class_Sound_OggVorbis.h"		//!< oggライブラリ(サウンドを発生させる為)

//-----------------------------------------------------------------------
//!	3Dオブジェクトの名前空間
//-----------------------------------------------------------------------
namespace O3D
{
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//	クライムの行動パターン
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	enum	BOSSCLIME_ACTION
	{
		eBCLIMEA_APPEAR,					//!< 出現時
		eBCLIMEA_APPEAR_WAIT,				//!< 出現待機時
		eBCLIMEA_WAIT,						//!< 待機時
		eBCLIMEA_DAMAGE,					//!< ダメージ反動時
		eBCLIMEA_MAX,						//!< 行動の最大数
	};

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	クラス名		CBOSS_CLIME
	//
	//	機能			アドベンチャーゲームモードの「クライム」クラス
	//	更新			2009/02/16	<新規>
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	class	CBOSS_CLIME : public CKAGETOKI_ADVENT_BOSS
	{
			//==================================================================
			//	ボス「クライム」マクロ
			//==================================================================
				#define	NAME_CLIME				"boss_clime"
				#define	CLIME_MAXLIFE			15

	private:		//-------------------- private --------------------//

				BOSSCLIME_ACTION	action;					//!< クライムの状態
				int					iAnimTemp[eBCLIMEA_MAX];//!< アニメーションテンプレート
				int					iHitFrame;				//!< 衝突点滅フレーム

			//==================================================================
			//	サウンドデータ
			//==================================================================
				int				stepCnt;					//!< ステップカウンタ
				SSTATIC*		sStaticStep;				//!< 足音
				SSTATIC*		sStaticJumpStart;			//!< ジャンプ音
				SSTATIC*		sStaticJumpEnd;				//!< 着地音

				void	soundStep(void);					//!< 足音の発生
				void	soundJumpStart(void);				//!< ジャンプの発生
				void	soundJumpEnd(void);					//!< 着地音

			//==================================================================
			//	条件操作の処理分け
			//==================================================================
				void	opeAppear(void);					//!< 出現時
				void	opeAppearWait(void);				//!< 出現待機時
				void	opeWait(void);						//!< 待機時
				void	opeDamage(void);					//!< ダメージ反動時

	protected:		//-------------------- protected --------------------//

	public:			//-------------------- public --------------------//

				CBOSS_CLIME(
					CONST DEV	inDev,
					CONST LPSTR	inName     = NAME_CLIME,
					CONST LPSTR	inResource = PATH_SKINMESH,
					CONST LPSTR	inTexture  = PATH_SKINMESHTEX);	//!< コンストラクタ
		virtual	~CBOSS_CLIME(void);

			//==================================================================
			//	状態変化
			//==================================================================
				BOOL	changeAction(BOSSCLIME_ACTION inNewAction);

			//==================================================================
			//	リアクション(正式なアクションをするサブクラスでオーバーライド)
			//==================================================================
				void	reactionMessage(REACTION_MESSAGE inMessage);

			//==================================================================
			//	リセット
			//==================================================================
				void	resetParameter(void);

			//==================================================================
			//	基本操作
			//==================================================================
				void	operation(CINPUT* input);

			//==================================================================
			//	描画
			//==================================================================
				BOOL	draw(CONST DEV inDev);
	};
}
//-----------------------------------------------------------------------
//!	3Dオブジェクトの名前空間
//-----------------------------------------------------------------------