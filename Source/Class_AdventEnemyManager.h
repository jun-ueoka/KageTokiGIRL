//***********************************************************************************
//!	ファイル名		Class_AdventEnemyManager.h
//
//	機能			アドベンチャーゲームの敵キャラクターを管理するクラスの定義
//	記述			上岡　純
//	プロジェクト	未定
//	更新			2009/02/16	<新規>
//***********************************************************************************

#pragma	once

//-----------------------------------------------------------------------
//!	インターフェイスヘッダー
//-----------------------------------------------------------------------
#include	"Class_EnemyShadoll.h"				//!< アドベンチャーエネミー「シャドール」
#include	"Class_EnemyShadollSword.h"			//!< アドベンチャーエネミー「シャドールソード」
#include	"Class_EnemyShadog.h"				//!< アドベンチャーエネミー「シャドッグ」
#include	"Class_EnemyShadollArchery.h"		//!< アドベンチャーエネミー「シャドールアーチェリー」

//-----------------------------------------------------------------------
//!	セーブリソースの名前空間
//-----------------------------------------------------------------------
namespace EM
{
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//	敵配置マップファイルへのパス
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	#define		PATH_ENEMYMAP		"..//Resources//Data//Enemy//EnemyMap%d.dat"

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//	敵の識別フラグ
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	enum	ENEMY_KIND
	{
		eEKIND_SHADOLL,			//!< シャドール					//!< SHADOLL___
		eEKIND_SHADOLL_SWORD,	//!< シャドールソード			//!< SHADOLL_SW
		eEKIND_SHADOG,			//!< シャドッグ					//!< SHADOG____
		eEKIND_SHADOLL_ARCHERY,	//!< シャドールアーチェリー		//!< SHADOLL_AR
		eEKIND_MAX,				//!< 敵の最大数
	};

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//	読み込んだ敵のデータ
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	struct	ENEMY_DATA
	{
		VEC3						appearLoc;
		CKAGETOKI_ADVENT_ENEMY*		enemy;

	//	コンストラクタ
		ENEMY_DATA(void)
		{
			this->appearLoc	= VEC3(0.0f, 0.0f, 0.0f);
			this->enemy		= NULL;
		}
	};

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	クラス名		CADVENT_ENEMY_MANAGER
	//
	//	機能			アドベンチャーゲームの敵キャラクターを管理するクラス
	//	更新			2009/02/16	<新規>
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	class	CADVENT_ENEMY_MANAGER
	{
	private:		//-------------------- private --------------------//

			//==================================================================
			//	リソース置き場
			//==================================================================
				CSKIN_MESH_BASE*	shadoll;
				CSKIN_MESH_BASE*	shadoll_sword;
				CSKIN_MESH_BASE*	shadog;
				CSKIN_MESH_BASE*	shadoll_archery;

				int					currFileNumber;			//!< 現在のファイル番号
				vector<ENEMY_DATA>	enemyObjects;			//!< 制御する敵データメンバー

			//==================================================================
			//	中枢インスタンス
			//==================================================================
		static	CADVENT_ENEMY_MANAGER*		gUniqueInstance;

				CADVENT_ENEMY_MANAGER(DEV inDev);			//!< コンストラクタ
				~CADVENT_ENEMY_MANAGER(void);				//!< デストラクタ

	public:			//-------------------- public --------------------//

		static	CADVENT_ENEMY_MANAGER*	getInstance(DEV inDev);			//!< インスタンス取得
		static	void					releaseInstance(void);			//!< インスタンス解放

				void	loadEnemyFromFile(
							DEV inDev, int inFileNumber,
							CKAGETOKI_ADVENT_CHARACTER**	inPlayer,
							C3D_OBJECT_GROUP*	inViewG,
							C3D_OBJECT_GROUP*	inHitG,
							C3D_OBJECT_GROUP*	inEnemyG);	//!< ファイル読み込み
				void	updateEnemy(VEC3* inPlayerLoc);		//!< 敵更新
				void	resetEnemy(void);					//!< 敵リセット
				void	releaseEnemy(void);					//!< 敵解放
	};
}
//-----------------------------------------------------------------------
//!	セーブリソースの名前空間
//-----------------------------------------------------------------------