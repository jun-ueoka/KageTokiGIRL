//***********************************************************************************
//!	ファイル名		Class_SoftShadowShader.h
//
//	機能			ソフトシャドウエフェクトクラスの定義
//	記述			上岡　純
//	プロジェクト	未定
//	更新			2008/12/22	<新規>
//***********************************************************************************

#pragma once

//-----------------------------------------------------------------------
//!	インターフェイスヘッダー
//-----------------------------------------------------------------------
#include	"DirectX.h"

//-----------------------------------------------------------------------
//!	シェーダの名前空間
//-----------------------------------------------------------------------
namespace SHA
{
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//	エフェクトファイルへのパス
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	#define		PATH_SOFTSHADOWSHADER		"..//Resources//Data//Shader//SoftShadowShader.fx"

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//	シャドウマップのサイズ
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	#define		SHADOWMAP_SIZE	1024.0f

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	クラス名		CDEPTHBUF_SHADER
	//
	//	機能			深度バッファシャドウエフェクトクラス
	//	更新			2008/12/14	<新規>
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	class	CDEPTHBUF_SHADER
	{
	private:		//-------------------- private --------------------//

			//==================================================================
			//	インスタンスを一度だけ生成する為
			//==================================================================
		static	CDEPTHBUF_SHADER*	gUniqueInstance;

	protected:		//-------------------- protected --------------------//

			//==================================================================
			//	シェーダ属性
			//==================================================================
				DEV		dev;							//!< 描画デバイス
				TEX		shadowMapTex;					//!< シャドウマップテクスチャ
				EFFECT	effect;							//!< 深度バッファシャドウエフェクト
//				FLOAT	fRadius;						//!< ガウス半径
				MAT		matrixWorld;					//!< ワールド変換行列
				MAT		matrixCameraView;				//!< カメラのビュー変換行列
				MAT		matrixCameraProj;				//!< カメラの射影変換行列
				MAT		matrixLightView;				//!< ライトのビュー変換行列
				MAT		matrixLightProj;				//!< ライトの射影変換行列
				D3DHAN	hWorldMat;						//!< ワールド変換行列ハンドル
				D3DHAN	hCameraViewMat;					//!< ビュー変換行列ハンドル
				D3DHAN	hCameraProjMat;					//!< 射影変換行列ハンドル
				D3DHAN	hLightViewMat;					//!< ビュー変換行列ハンドル
				D3DHAN	hLightProjMat;					//!< 射影変換行列ハンドル
				D3DHAN	hMateialColor;					//!< マテリアルカラーハンドル
//				D3DHAN	hShadowOffset;					//!< ガウス分布オフセット配列ハンドル
				D3DHAN	hShadowMapTex;					//!< シャドウマップテクスチャハンドル
				D3DHAN	hMeshTexture;					//!< メッシュテクスチャハンドル
				D3DHAN	hTechnique;						//!< テクニックへのハンドル

	public:			//-------------------- public --------------------//

				CDEPTHBUF_SHADER(void);
		virtual ~CDEPTHBUF_SHADER(void);

		static	CDEPTHBUF_SHADER*	getInstance(void);		//!< インスタンスを取得
		static	void				releaseInstance(void);	//!< インスタンスを解放
		static	void				lostInstance(void);		//!< インスタンスロスト
		static	void				resetInstance(void);	//!< インスタンスリセット

	public:			//-------------------- public --------------------//

			//==================================================================
			//	初期化メソッド
			//==================================================================
				BOOL	initialize(DEV inDev);

			//==================================================================
			//	シャドウマップテクスチャを設定
			//==================================================================
				BOOL	setShadowMap(TEX inShadowMapTex);

			//==================================================================
			//	access	エフェクト
			//==================================================================
				EFFECT	getEffect(void)	{ return	effect;	}

			//==================================================================
			//	access	マトリックス群
			//==================================================================
				void	setWorldMatrix(MAT *inMat);
				void	setCameraViewMatrix(MAT *inMat);
				void	setCameraProjMatrix(MAT *inMat);
				void	setLightViewMatrix(MAT *inMat);
				void	setLightProjMatrix(MAT *inMat);
				void	setMaterialColor(D3DCOLORVALUE* inMatColor);
				void	setEffectTexture(TEX inTex);

			//==================================================================
			//	access	Direct3Dデバイス
			//==================================================================
				DEV		getDevice(void)	{ return	dev;	}

			//==================================================================
			//	開始・終了操作
			//==================================================================
				HRESULT	begin(void);
				HRESULT	end(void);
				HRESULT	beginPass(void);
				HRESULT	endPass();

			//==================================================================
			//	登録されているパラメータ情報をエフェクトにセット
			//==================================================================
				BOOL	setParamToEffect(void);
	};
}
//-----------------------------------------------------------------------
//!	シェーダの名前空間
//-----------------------------------------------------------------------
#define	CDEPTH_SHA	SHA::CDEPTHBUF_SHADER