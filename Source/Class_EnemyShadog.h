//***********************************************************************************
//!	ファイル名		Class_EnemyShadog.h
//
//	機能			敵キャラクタークラス「シャドッグ」の定義
//	記述			上岡　純
//	プロジェクト	[KageTokiGIRL]
//	更新			2009/01/19	<新規>
//***********************************************************************************

#pragma	once

//-----------------------------------------------------------------------
//!	インターフェイスヘッダー
//-----------------------------------------------------------------------
#include	"Class_KageTokiAdventEnemy.h"		//!< アドベンチャーゲームモード敵キャラクター
#include	"Class_Sound_OggVorbis.h"			//!< oggライブラリ(サウンドを発生させる為)

//-----------------------------------------------------------------------
//!	3Dオブジェクトの名前空間
//-----------------------------------------------------------------------
namespace O3D
{
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//	シャドッグの行動パターン
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	enum	ENEMYSHADOG_ACTION
	{
		eESHADOGA_WAIT,							//!< 待機時
		eESHADOGA_RUN,							//!< 走行時
		eESHADOGA_JUMP,							//!< ジャンプ時
		eESHADOGA_ATTACK,						//!< ジャンプ攻撃時
		eESHADOGA_MAX,							//!< 行動の最大数
	};

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	クラス名		CENEMY_SHADOG
	//
	//	機能			アドベンチャーエネミーの「シャドッグ」クラス
	//	更新			2009/01/19	<新規>
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	class	CENEMY_SHADOG : public CKAGETOKI_ADVENT_ENEMY
	{
			//==================================================================
			//	敵「シャドッグ」マクロ
			//==================================================================
				#define	NAME_SHADOG				"enemy_shadog"

	private:		//-------------------- private --------------------//

				ENEMYSHADOG_ACTION	action;					//!< シャドッグの状態
				int				iAnimTemp[eESHADOGA_MAX];	//!< アニメーションテンプレート

				int				iHitFrame;					//!< 衝突点滅フレーム

			//==================================================================
			//	サウンドデータ
			//==================================================================
				int				stepCnt;					//!< ステップカウンタ
				SSTATIC*		sStaticStep;				//!< 足音
				SSTATIC*		sStaticJumpStart;			//!< ジャンプ音
				SSTATIC*		sStaticJumpEnd;				//!< 着地音
				SSTATIC*		sStaticBark1;				//!< 吠える
				SSTATIC*		sStaticBark2;				//!< 唸って吠える

				void	soundStep(void);					//!< 足音の発生
				void	soundJumpStart(void);				//!< ジャンプの発生
				void	soundJumpEnd(void);					//!< 着地音
				void	soundBark1(void)					//!< 吠える
				{ sStaticBark1->setPlayCur(0);	sStaticBark1->play(0, NULL);	}
				void	soundBark2(void)					//!< 唸って吠える
				{ sStaticBark2->setPlayCur(0);	sStaticBark2->play(0, NULL);	}

			//==================================================================
			//	条件操作の処理分け
			//==================================================================
				void	opeWait(void);						//!< 待機時
				void	opeRun(void);						//!< 走行時
				void	opeJunp(void);						//!< ジャンプ時
				void	opeAttack(void);					//!< ジャンプ攻撃時

	public:			//-------------------- public --------------------//

				CENEMY_SHADOG(
					CONST DEV	inDev,
					CONST LPSTR	inName     = NAME_SHADOG,
					CONST LPSTR	inResource = PATH_SKINMESH,
					CONST LPSTR	inTexture  = PATH_SKINMESHTEX);	//!< コンストラクタ
		virtual	~CENEMY_SHADOG(void);

			//==================================================================
			//	状態変化
			//==================================================================
				BOOL	changeAction(ENEMYSHADOG_ACTION inNewAction);

			//==================================================================
			//	リアクション(正式なアクションをするサブクラスでオーバーライド)
			//==================================================================
				void	reactionMessage(REACTION_MESSAGE inMessage);

			//==================================================================
			//	基本操作
			//==================================================================
				void	operation(CINPUT* input);

			//==================================================================
			//	描画
			//==================================================================
				BOOL	draw(CONST DEV inDev);
	};
}
//-----------------------------------------------------------------------
//!	3Dオブジェクトの名前空間
//-----------------------------------------------------------------------