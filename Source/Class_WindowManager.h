//***********************************************************************************
//!	ファイル名		Class_WindowMamager.h
//
//	機能			ウィンドウの処理を管理するクラスの定義
//	記述			上岡　純
//	プロジェクト	未定
//	更新			2008/04/16	<新規>
//***********************************************************************************

#pragma once

//-----------------------------------------------------------------------
//!	インターフェイスヘッダー
//-----------------------------------------------------------------------
#include	"Class_GameApplication.h"
#include	"Class_GraphicDevice.h"

//-----------------------------------------------------------------------
//!	ウィンドウマネージャの名前空間
//-----------------------------------------------------------------------
namespace WM
{
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	管理マクロ
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	#define	kWINCLASS			"KageTokiGIRL"				//!< WinClass名
	#define	kGAMETITLE			"KageTokiGIRL [%.2f fps]"	//!< ゲームタイトル

	#define	kWIN_WIDTH			1024						//!< ウィンドウ横幅
	#define	kWIN_HEIGHT			768							//!< ウィンドウ縦幅

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	クラス名		CWINDOW_MANAGER
	//
	//	機能			DirectXデバイスを持ったウィンドウを、管理するクラス
	//	更新			2008/04/16	<新規>
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	class CWINDOW_MANAGER
	{
	private:		//-------------------- private --------------------//

			//==================================================================
			//	インスタンスを一度だけ生成する為に必要
			//==================================================================
		static	CWINDOW_MANAGER*	gUniqueInstance;

				GAPP	::	CGAME_APPLICATION*	app;			//!< ゲームアプリケーション
				GD		::	CGRAPHIC_DEVICE*	gDev;			//!< グラフィックデバイス
				HWND							hWnd;			//!< ウィンドウハンドル
				MSG								msg;			//!< メッセージキューからのメッセージ情報を格納

			//==================================================================
			//	状態確認
			//==================================================================
				BOOL			bGenerationFailure;				//!< 生成失敗確認フラグ
				BOOL			bFullScreen;					//!< フルスクリーンモード確認フラグ
				BOOL			bResetDevice;					//!< デバイスリセット確認フラグ
				BOOL			bOperation;						//!< 起動状態確認フラグ
				DWORD			dwTime;							//!< 取得時間格納（ゲームループ用）

			//==================================================================
			//	画面ステータス
			//==================================================================
				POINT			pScreenSize;					//!< スクリーンサイズ
				POINT			pScreenMulti;					//!< 通常状態からみたスクリーンの比率

			//==================================================================
			//	fps関連
			//==================================================================
				DWORD			dwFrames;						//!< フレーム数
				DWORD			dwLast;							//!< 取得時間格納（FPS用）
				char			szFps[256];						//!< タイトル表示用

				CWINDOW_MANAGER(HINSTANCE inInstance, int inShowCmd);					//!< コンストラクタ
				~CWINDOW_MANAGER(void);													//!< デストラクタ

	public:		//-------------------- public --------------------//

		static	CWINDOW_MANAGER*	getInstance(HINSTANCE inInstance, int inShowCmd);	//!< インスタンス取得
		static	void				releaseInstance(void);								//!< インスタンス解放

				void	initialize(void);						//!< 初期化処理
				void	finishalize(void);						//!< 解放処理

				BOOL	findOperationWindow(void);				//!< このプログラムが既に作動しているか調べる
				BOOL	registerClass(HINSTANCE inInstance);	//!< ウィンドウを登録する
				BOOL	generationWindow(HINSTANCE inInstance);	//!< ウィンドウを生成する
				BOOL	initApplication(HINSTANCE inInstance);	//!< アプリケーションの生成・初期化
				void	initLoop(int inShowCmd);				//!< ウィンドウを更新しループの準備をする
				int		messageLoop(void);						//!< メッセージループ
				void	calclateFPS(void);						//!< フレーム数を計算する
	};
}
//-----------------------------------------------------------------------
//!	ウィンドウマネージャの名前空間
//-----------------------------------------------------------------------