//***********************************************************************************
//!	ファイル名		Class_ZTextureShader.h
//
//	機能			Zテクスチャを作成するクラスの定義
//	記述			上岡　純
//	プロジェクト	未定
//	更新			2008/12/14	<新規>
//***********************************************************************************

#pragma once

//-----------------------------------------------------------------------
//!	インターフェイスヘッダー
//-----------------------------------------------------------------------
#include	"DirectX.h"

//-----------------------------------------------------------------------
//!	シェーダの名前空間
//-----------------------------------------------------------------------
namespace SHA
{
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//	エフェクトファイルへのパス
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	#define		PATH_ZTEXSHADER		"..//Resources//Data//Shader//ZTextureShader.fx"

	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	//!	クラス名		CZTEXTURE_SHADER
	//
	//	機能			Zテクスチャを作成するクラス
	//	更新			2008/12/14	<新規>
	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	class	CZTEXTURE_SHADER
	{
	private:		//-------------------- private --------------------//

			//==================================================================
			//	インスタンスを一度だけ生成する為
			//==================================================================
		static	CZTEXTURE_SHADER*	gUniqueInstance;

	protected:		//-------------------- protected --------------------//

			//==================================================================
			//	シェーダ属性
			//==================================================================
				DEV		dev;							//!< 描画デバイス
				UINT	zTexWidth;						//!< Zテクスチャの横幅
				UINT	zTexHeight;						//!< Zテクスチャの縦幅

				TEX		zTex;							//!< Z値テクスチャ
				SURF	zTexSurf;						//!< Z値テクスチャサーフェイス
				SURF	depthBufferSurf;				//!< 深度バッファ
				SURF	devBufferSurf;					//!< デバイスバックバッファ
				SURF	devDepthBufferSurf;				//!< デバイス深度バッファ
				EFFECT	effect;							//!< Z値プロットエフェクト
				MAT		matrixLightViewProjection;		//!< ライトビュー射影変換行列
				D3DHAN	hWorldLightViewProjectionMat;	//!< ライトビュー射影変換行列ハンドル
				D3DHAN	hTechnique;						//!< テクニックへのハンドル

	public:			//-------------------- public --------------------//

				CZTEXTURE_SHADER(void);
		virtual ~CZTEXTURE_SHADER(void);

		static	CZTEXTURE_SHADER*	getInstance(void);		//!< インスタンスを取得
		static	void				releaseInstance(void);	//!< インスタンスを解放
		static	void				lostInstance(void);		//!< インスタンスロスト
		static	void				resetInstance(void);	//!< インスタンスリセット

	public:			//-------------------- public --------------------//

			//==================================================================
			//	初期化メソッド
			//==================================================================
				BOOL	initialize(DEV inDev, UINT inZTexWidth, UINT inZTexHeight);
				void	finitialize(void);

			//==================================================================
			//	DeviceLost制御
			//==================================================================
				void	lostExecute(void);
				void	resetExecute(void);

			//==================================================================
			//	access	エフェクト
			//==================================================================
				EFFECT	getEffect(void)	{ return	effect;	}

			//==================================================================
			//	access	マトリックス群
			//==================================================================
				void	setWorldMatrix(MAT *inMat);
				void	setLightViewProjMatrix(MAT *inMat);

			//==================================================================
			//	access	初期情報
			//==================================================================
				DEV		getDevice(void)		{ return	dev;		}
				UINT	getZTexWidth(void)	{ return	zTexWidth;	}
				UINT	getZTexHeight(void)	{ return	zTexHeight;	}

			//==================================================================
			//	開始・終了操作
			//==================================================================
				HRESULT	begin(void);
				HRESULT	end(void);
				HRESULT	beginPass(void);
				HRESULT	endPass(void);

			//==================================================================
			//	Z値テクスチャを取得する
			//==================================================================
				TEX		getZTex(void);
	};
}
//-----------------------------------------------------------------------
//!	シェーダの名前空間
//-----------------------------------------------------------------------
#define	CZTEX_SHA	SHA::CZTEXTURE_SHADER